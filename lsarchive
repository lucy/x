#!/usr/bin/env bash
set -e
set -o pipefail

prog="$(basename "$0")"
archives=()
v=''

usage() {
	cat >&2 <<-EOF
	Usage: $prog [option ...] file [file ...]
	Lists the contents of archives.

	Options:
	  -h    Show this help
	  -v    Try to be verbose
	EOF
}

exists() { hash "$1" 2>/dev/null; }
err() { printf '%s: %s\n' "$prog" "$1" 1>&2; }
errf() { fmt="$1"; shift; printf "%s: $fmt\n", "$prog" "$@" 1>&2; }

if exists bsdtar; then
	tar=bsdtar
else
	tar=tar
fi

bsdtar_list() { bsdtar -t${v}f "$1"; }
tar_list() { "$tar" -t${v}f "$1"; }

lstar() {
	local type
	type="$(file -E -bL --mime-type "$1")"
	if (($?)); then
		err "$type"
		return 1
	fi
	case "$type" in
	'application/x-tar'|'application/x-bzip2'|'application/x-gzip')
		tar_list "$1" ;;
	'application/x-lrzip')
		if bsdtar --lrzip --help &> /dev/null; then
			bsdtar_list "$1"
		else
			lrzcat "$1" | tar_list -
		fi
		;;
	'application/x-lzip')
		lzip --keep --quiet --decompress --stdout "$1" | tar_list - ;;
	'application/x-lzma')
		if "$tar" --lzma --help &> /dev/null; then
			tar_list "$1"
		else
			lzcat "$1" | tar_list -
		fi
		;;
	'application/x-xz')
		if "$tar" --xz --help &> /dev/null; then
			tar_list "$1"
		else
			xzcat "$1" | tar_list -
		fi
		;;
	*)
		# last resort
		bsdtar_list "$1" ;;
	esac
}

lsarchive() {
	local type
	type="$(file -E -bL --mime-type "$1")"
	if (($?)); then
		err "$type"
		return 1
	fi
	case "$(file -bL --mime-type "$1")" in
	'application-x-7z-compressed')
		if exists 7za; then
			7za l "$1"
		else
			bsdtar_list "$1"
		fi
		;;
	'application/java-archive'|'application/zip')
		if exists bsdtar; then
			bsdtar_list "$1"
		else
			unzip -l${v} "$1"
		fi
		;;
	'application/x-rar')
		if exists unrar; then
			unrar -"${v:-l}" "$1"
		elif exists rar; then
			rar -"${v:-l}" "$1"
		else
			bsdtar_list "$1"
		fi
		;;
	*)
		errf "no handler for '%s' (%s), trying bsdtar\n" "$1" "$type"
		bsdtar_list "$1"
		;;
esac
}

ls() {
	local type
	type="$(file -E -bzL --mime-type "$1")"
	if (($?)); then
		err "$type"
		return 1
	fi

	case "$type" in
	'application/x-tar')
		lstar "$1"
		;;
	*)
		lsarchive "$1"
		;;
	esac
}

while (($#)); do
	case "$1" in
	-h)
		usage
		exit
		;;
	-v)
		v=v
		shift
		;;
	*)
		archives+=("$1")
		shift
		;;
	esac
done

exit_status=0

for archive in "${archives[@]}"; do
	if ! ls "$archive"; then
		exit_status=1
	fi
done

exit "$exit_status"
